---
- name: Files
  block:
    - name: Files | Ensure netmaker root directory exists
      ansible.builtin.file:
        path: "{{ netmaker_root_directory }}/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - dnsconfig
        - caddy/data
        - caddy/conf
        - mosquitto/data
        - mosquitto/logs
        - turndata
        - sqldata

    - name: Files | Download latest netmaker docker files
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/gravitl/netmaker/{{ netmaker_version }}/{{ item.file }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      loop:
        - file: compose/docker-compose.yml
          dest: "{{ netmaker_root_directory }}/docker-compose.yml"
          mode: "0644"
        - file: docker/mosquitto.conf
          dest: "{{ netmaker_root_directory }}/mosquitto.conf"
          mode: "0644"
        - file: docker/Caddyfile
          dest: "{{ netmaker_root_directory }}/Caddyfile"
          mode: "0644"
        - file: docker/wait.sh
          dest: "{{ netmaker_root_directory }}/wait.sh"
          mode: "0755"

    - name: Files | Template out netmaker.env
      ansible.builtin.template:
        src: netmaker.env.j2
        dest: "{{ netmaker_root_directory }}/netmaker.env"
        owner: root
        group: root
        mode: "0600"

    - name: Files | symlink netmaker.env -> .env
      ansible.builtin.file:
        src: "{{ netmaker_root_directory }}/netmaker.env"
        dest: "{{ netmaker_root_directory }}/.env"
        state: link

    - name: Files | Remove docker-controlled volumes from docker-compose.yml
      ansible.builtin.replace:
        path: "{{ netmaker_root_directory }}/docker-compose.yml"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.value }}"
      loop:
        - regexp: '^volumes:\n(\s+\w+:.*(\n|$))+'
          value: ""
        - regexp: "dnsconfig:"
          value: "./dnsconfig:"
        - regexp: "caddy_data:"
          value: "./caddy/data:"
        - regexp: "caddy_conf:"
          value: "./caddy/conf:"
        - regexp: "mosquitto_data:"
          value: "./mosquitto/data:"
        - regexp: "mosquitto_logs:"
          value: "./mosquitto/logs:"
        - regexp: "turn_server:"
          value: "./turndata:"
        - regexp: "sqldata:"
          value: "./sqldata:"

    - name: Files | Allow Caddy to manage own certificates
      ansible.builtin.replace:
        path: "{{ netmaker_root_directory }}/Caddyfile"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.value }}"
      loop:
        - regexp: '^\s+tls.*$'
          value: ""
  become: yes
  tags:
    - files
    - netmaker
